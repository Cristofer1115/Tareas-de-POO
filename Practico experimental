class Biblioteca:
    def __init__(self):
        # Usamos un diccionario para almacenar los libros.
        # La clave será el ISBN y el valor será un diccionario con los datos del libro.
        self.libros = {}

    def agregar_libro(self, isbn, titulo, autor, anio_publicacion):
        """Agrega un nuevo libro a la biblioteca."""
        if isbn in self.libros:
            print(f"Error: Ya existe un libro con el ISBN '{isbn}'.")
        else:
            self.libros[isbn] = {
                "titulo": titulo,
                "autor": autor,
                "anio_publicacion": anio_publicacion,
                "disponible": True
            }
            print(f"Libro '{titulo}' agregado exitosamente.")

    def prestar_libro(self, isbn):
        """Marca un libro como prestado."""
        if isbn in self.libros:
            if self.libros[isbn]["disponible"]:
                self.libros[isbn]["disponible"] = False
                print(f"El libro con ISBN '{isbn}' ha sido prestado.")
            else:
                print(f"El libro con ISBN '{isbn}' no está disponible.")
        else:
            print(f"Error: No se encontró un libro con el ISBN '{isbn}'.")

    def devolver_libro(self, isbn):
        """Marca un libro como devuelto y disponible."""
        if isbn in self.libros:
            if not self.libros[isbn]["disponible"]:
                self.libros[isbn]["disponible"] = True
                print(f"El libro con ISBN '{isbn}' ha sido devuelto.")
            else:
                print(f"El libro con ISBN '{isbn}' ya estaba disponible.")
        else:
            print(f"Error: No se encontró un libro con el ISBN '{isbn}'.")

    def consultar_libro(self, isbn):
        """Consulta la información de un libro específico."""
        if isbn in self.libros:
            libro = self.libros[isbn]
            print("\n--- Información del Libro ---")
            print(f"ISBN: {isbn}")
            print(f"Título: {libro['titulo']}")
            print(f"Autor: {libro['autor']}")
            print(f"Año: {libro['anio_publicacion']}")
            print(f"Disponible: {'Sí' if libro['disponible'] else 'No'}")
        else:
            print(f"Error: No se encontró un libro con el ISBN '{isbn}'.")

    def generar_reporte_completo(self):
        """Genera un reporte de todos los libros registrados."""
        if not self.libros:
            print("No hay libros registrados en la biblioteca.")
            return

        print("\n--- Reporte Completo de Libros ---")
        for isbn, libro in self.libros.items():
            print(f"\nISBN: {isbn}")
            print(f"  Título: {libro['titulo']}")
            print(f"  Autor: {libro['autor']}")
            print(f"  Disponible: {'Sí' if libro['disponible'] else 'No'}")
        print("-----------------------------------")

# --- Ejemplo de uso ---
if __name__ == "__main__":
    mi_biblioteca = Biblioteca()

    # Agregar libros
    mi_biblioteca.agregar_libro("978-0321765723", "The Lord of the Rings", "J.R.R. Tolkien", 1954)
    mi_biblioteca.agregar_libro("978-0743273565", "The Great Gatsby", "F. Scott Fitzgerald", 1925)
    mi_biblioteca.agregar_libro("978-0321765723", "Otro Libro", "Otro Autor", 2000) # Intentando agregar un duplicado

    # Consultar y prestar un libro
    mi_biblioteca.consultar_libro("978-0321765723")
    mi_biblioteca.prestar_libro("978-0321765723")
    mi_biblioteca.consultar_libro("978-0321765723")

    # Intentar prestar un libro ya prestado
    mi_biblioteca.prestar_libro("978-0321765723")

    # Devolver un libro
    mi_biblioteca.devolver_libro("978-0321765723")
    mi_biblioteca.consultar_libro("978-0321765723")

    # Generar reporte
    mi_biblioteca.generar_reporte_completo()

