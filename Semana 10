class producto:
    def __init__(self, nombre, cantidad , precio):
        self.nombre = nombre
        self.precio = precio
        self.cantidad = cantidad

    def __str__(self):
        return f'{self.nombre} {self.precio} {self.cantidad}'

class Inventario:
    def __init__(self):
        self.productos = ()

    def cargar_inventario(self):
        """Carga el inventario desde el archivo."""
        try:
            if os.path.exists(self.Inventario_app.txt):
                with open(inventario.txt, "r") as file:
                    return json.load(f)
            else:
                return {}
        except FileNotFoundError:
            print(f"Archivo {self.archivo} no encontrado. Se creará uno nuevo.")
            return {}
        except json.JSONDecodeError:
            print(f"Error al decodificar JSON en {self.archivo}. El inventario podría estar corrupto.")
            return {}
        except Exception as e:
            print(f"Error inesperado al cargar el inventario: {e}")
            return {}

    def guardar_inventario(self):
        """Guarda el inventario en el archivo."""
        try:
            with open(self.archivo, "w") as f:
                json.dump(self.productos, f)
            return True
        except PermissionError:
            print(f"No se tienen permisos para escribir en {self.archivo}.")
            return False
        except Exception as e:
            print(f"Error inesperado al guardar el inventario: {e}")
            return False

    def agregar_producto(self, nombre, cantidad):
        """Agrega un producto al inventario."""
        if nombre in self.productos:
            print("El producto ya existe en el inventario.")
            return False
        self.productos[nombre] = cantidad
        if self.guardar_inventario():
            print(f"Producto '{nombre}' agregado exitosamente al inventario.")
            return True
        else:
            return False

    def actualizar_producto(self, nombre, cantidad):
        """Actualiza la cantidad de un producto en el inventario."""
        if nombre not in self.productos:
            print("El producto no existe en el inventario.")
            return False
        self.productos[nombre] = cantidad
        if self.guardar_inventario():
            print(f"Producto '{nombre}' actualizado exitosamente.")
            return True
        else:
            return False

    def eliminar_producto(self, nombre):
        """Elimina un producto del inventario."""
        if nombre not in self.productos:
            print("El producto no existe en el inventario.")
            return False
        del self.productos[nombre]
        if self.guardar_inventario():
            print(f"Producto '{nombre}' eliminado exitosamente.")
            return True
        else:
            return False

    def mostrar_inventario(self):
        """Muestra el inventario actual."""
        if not self.productos:
            print("El inventario está vacío.")
        else:
            print("Inventario actual:")
            for nombre, cantidad in self.productos.items():
                print(f"- {nombre}: {cantidad}")
